version: '3'

services:
  app:
    build:
      context: .
      dockerfile: docker/app.dockerfile
    ports:
      - "8000:8000"
    networks:
      - elk-network
    environment:
      - PYTHONPATH=/app
      - LOG_LEVEL=INFO
      - SERVICE_NAME=fastapi
    volumes:
      - ./app:/app/app
    depends_on:
      elasticsearch:
        condition: service_healthy
    labels:
      - "co.elastic.logs/enabled=true"
      - "co.elastic.logs/json.keys_under_root=true"
      - "co.elastic.logs/json.add_error_key=true"
      - "co.elastic.logs/json.message_key=message"
      - "co.elastic.logs/json.overwrite_keys=true"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - elk-network
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200 >/dev/null || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.2
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - elk-network

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.12.2
    user: root
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - elk-network
    depends_on:
      elasticsearch:
        condition: service_healthy

networks:
  elk-network:
    driver: bridge

volumes:
  elasticsearch-data: 